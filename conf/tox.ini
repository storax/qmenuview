[tox]
toxworkdir = {toxinidir}/../.toxqmenuview
envlist =
    clean,
    check,
{% for env in tox_environments|sort %}
    {{ env }},
{% endfor %}
    report,
    docs

[testenv]
passenv = DISPLAY
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
deps =
    pytest
    pytest-qt
    pytest-capturelog
commands =
    python {envbindir}/pyside_postinstall.py -install
    {posargs:py.test -vv}

[testenv:spell]
whitelist_externals =
    make
setenv =
    SPELLCHECK = 1
commands =
    python {envbindir}/pyside_postinstall.py -install
    make spelling -B
usedevelop = true
changedir={toxinidir}/docs
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
whitelist_externals =
    make
commands =
    python {envbindir}/pyside_postinstall.py -install
    make linkcheck -B
    make html -B
usedevelop = true
changedir={toxinidir}/docs
deps =
    -r{toxinidir}/docs/requirements.txt
    -r{toxinidir}/requirements.txt

[testenv:configure]
deps =
    jinja2
    matrix
usedevelop = true
commands =
    python bootstrap.py

[testenv:check]
deps =
    docutils
    flake8
    collective.checkdocs
usedevelop = true
commands =
    python {envbindir}/pyside_postinstall.py -install
    python setup.py checkdocs
    python setup.py check --restructuredtext --strict --metadata
    flake8 src

[testenv:coveralls]
passenv = TRAVIS TRAVIS_JOB_ID TRAVIS_BRANCH
deps =
    coveralls
usedevelop = true
commands =
    python {envbindir}/pyside_postinstall.py -install
    coverage combine
    coverage report
    coveralls

[testenv:report]
commands =
    python {envbindir}/pyside_postinstall.py -install
    coverage combine
    coverage report
usedevelop = true
deps = coverage<3.999

[testenv:clean]
commands =
    python {envbindir}/pyside_postinstall.py -install
    coverage erase
usedevelop = true
deps = coverage<3.999

{% for env, config in tox_environments|dictsort %}
[testenv:{{ env }}]
basepython = {{ config.python }}
{% if config.cover or config.env_vars %}
setenv =
    {[testenv]setenv}
{% endif %}
{% for var in config.env_vars %}
    {{ var }}
{% endfor %}
{% if config.cover %}
    WITH_COVERAGE=yes
usedevelop = true
commands =
    python {envbindir}/pyside_postinstall.py -install
    {posargs:py.test --cov src -vv}
{% endif %}
deps =
    {[testenv]deps}
    coverage<3.999
    pytest-cov
{% for dep in config.deps %}
    {{ dep }}
{% endfor %}

{% endfor %}


